name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v3.2.0
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Wait for MongoDB
      run: |
        echo "Waiting for MongoDB to be ready..."
        sleep 15

    - name: Create .env files for testing
      run: |
        # Tạo .env cho auth với MongoDB local
        cat > auth/.env << EOF
        MONGODB_AUTH_URI=mongodb://localhost:27017/auth_test
        JWT_SECRET=test-jwt-secret-for-ci-cd-pipeline-12345
        PORT=3000
        NODE_ENV=test
        EOF
        
        # Tạo .env cho product với MongoDB local
        cat > product/.env << EOF
        JWT_SECRET=test-jwt-secret-for-ci-cd-pipeline-12345
        MONGODB_PRODUCT_URI=mongodb://localhost:27017/product_test
        LOGIN_TEST_USER=test@example.com
        LOGIN_TEST_PASSWORD=testpassword123
        AUTH_SERVICE_URL=http://localhost:3000
        PORT=3001
        NODE_ENV=test
        EOF

    - name: Install ALL dependencies
      run: |
        echo "Installing ALL dependencies including devDependencies..."
        
        # Auth service - cài đặt tất cả dependencies
        cd auth
        npm install
        cd ..
        
        # Product service - cài đặt tất cả dependencies  
        cd product
        npm install
        cd ..
        
    - name: Add health endpoint to auth service
      run: |
        echo "Adding health endpoint to auth service..."
        # Tạo file health endpoint tạm thời
        cat > auth/health.js << 'EOF'
        const express = require('express');
        const router = express.Router();
        
        router.get('/health', (req, res) => {
          res.status(200).json({ 
            status: 'OK', 
            service: 'auth',
            timestamp: new Date().toISOString()
          });
        });
        
        module.exports = router;
        EOF
        
        # Thêm health endpoint vào app.js của auth
        cd auth
        if grep -q "health" src/app.js; then
          echo "Health endpoint already exists"
        else
          # Tìm dòng có this.app.use(express.json()); và thêm health endpoint sau đó
          sed -i '/this.app.use(express.json())/a\    this.app.use(require("..\/health"));' src/app.js
        fi
        cd ..

    - name: Run tests for auth service
      run: |
        echo "Running auth tests..."
        cd auth
        npm test
        
    - name: Start auth service and run product tests
      run: |
        echo "Starting auth service and running product tests..."
        # Start auth service in background
        cd auth
        npm start &
        
        # Wait for auth service to be ready - KIỂM TRA HEALTH ENDPOINT
        echo "Waiting for auth service to start..."
        sleep 25
        
        # Bây giờ health endpoint đã có, kiểm tra lại
        echo "Checking auth service health endpoint..."
        curl -f http://localhost:3000/health || (echo "Health endpoint failed, trying alternative check..." && sleep 10)
        
        # Chạy product tests
        echo "Running product tests..."
        cd ../product
        npm test

    - name: Cleanup
      if: always()
      run: |
        echo "Cleaning up..."
        pkill -f "node" || true