

services:
  # MongoDB Databases
  mongodb-auth:
    image: mongo:4.4
    container_name: mongodb-auth
    ports:
      - "27017:27017"
    networks:
      - microservices-network

  mongodb-product:
    image: mongo:4.4
    container_name: mongodb-product
    ports:
      - "27018:27017"
    networks:
      - microservices-network

  mongodb-order:
    image: mongo:4.4
    container_name: mongodb-order
    ports:
      - "27019:27017"
    networks:
      - microservices-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 40s
    networks:
      - microservices-network

  # Auth Service
  auth:
    build: ./auth
    container_name: auth-service
    ports:
      - "3000:3000"
    env_file:
      - ./auth/.env
    depends_on:
      - mongodb-auth
    networks:
      - microservices-network

  # Product Service
  product:
    build: ./product
    container_name: product-service
    ports:
      - "3001:3001"
    env_file:
      - ./product/.env
    depends_on:
      - mongodb-product
      - rabbitmq
    networks:
      - microservices-network

  # Order Service
  order:
    build: ./order
    container_name: order-service
    ports:
      - "3002:3002"
    env_file:
      - ./order/.env
    depends_on:
      - mongodb-order
      - rabbitmq
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "3003:3003"
    env_file:
      - ./api-gateway/.env
    depends_on:
      - auth
      - product
      - order
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge